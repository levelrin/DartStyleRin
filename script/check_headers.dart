/// Copyright (c) 2020 Rin (https://www.levelrin.com)
/// This file has been created under the terms of the MIT License.
/// See the details at https://github.com/levelrin/DartStyleRin/blob/master/LICENSE

import 'dart:io';

/// It checks all Dart files in this project if they have the header.
/// If it finds a file without the header, the exit code will be 2.
/// Otherwise, the exit code will be 0.
/// We use this script during the CI.
void main() {
  stdout.writeln('Start checking the file headers.');
  int exitCode = 0;
  final List<FileSystemEntity> entities = Directory
    .current
    .listSync(recursive: true);
  for (final FileSystemEntity entity in entities) {
    final String path = entity.path;
    if (entity is File && path.endsWith('.dart')) {
      final String content = entity.readAsStringSync();
      if (!content.startsWith(RegExp(_headerPattern, multiLine: true)) && !_ignoredFiles.contains(path)) {
        stdout.writeln('The file does not have the header. file: $path');
        exitCode = 2;
      }
    }
  }
  stdout.writeln('End checking the file headers.');
  exit(exitCode);
}

/// Some Dart files are generated by tools.
/// We will ignore them.
final List<String> _ignoredFiles = <String>[
  '${Directory.current.path}/test/.test_coverage.dart'
];

/// The header that all Dart files should have.
const String _headerPattern = r'''
\/\/\/ Copyright \(c\) \d\d\d\d Rin \(https:\/\/www.levelrin.com\)
\/\/\/ This file has been created under the terms of the MIT License.
\/\/\/ See the details at https:\/\/github.com\/levelrin\/DartStyleRin\/blob\/master\/LICENSE
''';
